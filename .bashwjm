#!/bin/bash
# modified from https://gist.github.com/atduskgreg/1691176
PS1="\[\033[01;35m\]\u\[\033[00m\]@\[\033[01;38m\]\$(uname -n):\[\033[00m\]\[\033[01;32m\]\w\[\033[01;33m\]\$(parse_git_branch)\$(parse_git_dirty)\[\033[00m\]$ "
 
parse_git_branch() {
  if [[ $(git rev-parse --show-toplevel 2>/dev/null) != $HOME ]]; then
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
  fi
}
 
parse_git_dirty() {
  TOP=$(git rev-parse --show-toplevel 2>/dev/null)
  if [[ -d .git ]] && [[ $TOP != $HOME ]] && [[ $TOP != "$HOME/projects/gcc" ]]; then
    CLEAN=$(git status | tail -n1)
    [[ $CLEAN != "nothing to commit (working directory clean)" ]] && [[ $CLEAN != "nothing to commit, working directory clean" ]] && [[ $CLEAN != "nothing to commit, working tree clean" ]] && echo "*"
  fi
}

ldf() {
    pdflatex ${1%tex}tex 2>/dev/null </dev/null && nohup evince ${1%tex}pdf &>/dev/null
}

export EDITOR=$(which vim)
export GIT_DISCOVERY_ACROSS_FILESYSTEM=1

# aliases
alias ls='ls -G'
alias mop='ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS'
alias cf='clang-format'
alias gfom='git fetch origin master'
alias gmo='git merge origin/master'
alias gom='gfom && gmo'
alias gc='git checkout'
alias gcm='git checkout master'
alias gou='git fetch origin `git symbolic-ref --short -q HEAD` && git merge origin/`git symbolic-ref --short -q HEAD`'
alias gs='git status'
cfi() {
    clang-format -i "$*"
}
gg() {
    git grep -n "$*"
}
ggi() {
    git grep -h "import .*$*" | head -n 1
}
ff() {
    clang-format $1 | diff - $1
}
gtfo() {
    git fetch origin $1
    git checkout $1
}
v() {
    vim "$*"
}
fn() {
    find . -name *"$*"*
}
gb() {
    if [ $# -eq 0 ]; then
        git for-each-ref --sort=-committerdate refs/heads/ | head -n 5
    else
        git for-each-ref --sort=-committerdate refs/heads/ | head -n $1
    fi
}
c() {
    $* | pbcopy
}
gl() {
    if [ $# -eq 0 ]; then
        git log -n 1 $*
    else
        git log -n $1 $2
    fi
}
# git push origin current-branch
gpo() {
    git push origin `git symbolic-ref --short -q HEAD`
}
bp() {
    $* &>/dev/null &
}
ofc() {
    pkill -9 Xcode
}
lines() {
    echo dirty
    echo +`git diff $1 | grep ^+ | wc -l`
    echo -`git diff $1 | grep ^- | wc -l`
    echo cached
    echo +`git diff --cached $1 | grep ^+ | wc -l`
    echo -`git diff --cached $1 | grep ^- | wc -l`
}
todo() {
    git grep "TODO\|FIXME\|XXX" | grep -v "Binary file"
}
. ~/z/z.sh
